{
  "unicorn/error-message": {
    "description": "Pass error message when throwing errors",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/error-message.md",
    "options": "error"
  },
  "unicorn/escape-case": {
    "description": "Uppercase regex escapes",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/escape-case.md",
    "options": "error"
  },
  "unicorn/no-instanceof-array": {
    "description": "Array.isArray instead of instanceof",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-instanceof.md",
    "options": "error"
  },
  "unicorn/no-new-array": {
    "description": "Ban `new Array` as `Array` constructor's params are ambiguous",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-new.md",
    "options": "error"
  },
  "unicorn/no-new-buffer": {
    "description": "Prevent deprecated `new Buffer()`",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-new.md",
    "options": "error"
  },
  "unicorn/no-unsafe-regex": {
    "description": "Keep regex literals safe!",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-unsafe.md",
    "options": "error"
  },
  "unicorn/number-literal-case": {
    "description": "Lowercase number formatting for octal, hex, binary (0x1ERROR instead of 0X1ERROR)",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/number-literal.md",
    "options": "error"
  },
  "unicorn/prefer-includes": {
    "description": "includes over indexOf when checking for existence",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-includes.md",
    "options": "error"
  },
  "unicorn/prefer-node-protocol": {
    "description": "Prefer using the node: protocol",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-node.md",
    "options": "error"
  },
  "unicorn/prefer-number-properties": {
    "description": "Prefer using number properties like `Number.isNaN` rather than `isNaN`",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-number.md",
    "options": "error"
  },
  "unicorn/prefer-string-starts-ends-with": {
    "description": "String methods startsWith/endsWith instead of more complicated stuff",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-string.md",
    "options": "error"
  },
  "unicorn/prefer-text-content": {
    "description": "textContent instead of innerText",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-text.md",
    "options": "error"
  },
  "unicorn/prefer-type-error": {
    "description": "Enforce throwing type error when throwing error while checking typeof",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-type.md",
    "options": "error"
  },
  "unicorn/throw-new-error": {
    "description": "Use new when throwing error",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/throw-new.md",
    "options": "error"
  }
}
